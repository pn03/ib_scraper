{
  "hasImages": false,
  "contentHTML": "<html><head></head><body><h4>Largest Distance between nodes of a Tree</h4><div><strong>Time: 69:50</strong><br><strong>Score: 200</strong></div><br><br>                      <p><strong>Problem Description</strong><br></p><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given an arbitrary unweighted rooted tree which consists of <strong>N</strong> nodes.</p><p></p><br><p>The goal of the problem is to find <strong>largest distance between two nodes in a tree.</strong></p><br><p>Distance between two nodes is a number of edges on a path between the nodes (there will be a unique path between any pair of nodes since it is a tree).</p><br><p>The nodes will be numbered <strong>0</strong> through <strong>N - 1</strong>.</p><br><p>The tree is given as an array <strong>A</strong>, there is an edge between nodes <strong>A[i]</strong> and <strong>i (0 &lt;= i &lt; N)</strong>. Exactly one of the i&apos;s will have A[i] equal to -1, it will be root node.</p><br><p></p></div><br><br><strong>Problem Constraints</strong><br><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N &lt;= 40000</p><br></div><br><br><strong>Input Format</strong><br><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an integer array A of size <strong>N</strong>.</p></div><br><br><strong>Output Format</strong><br><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a single integer denoting the largest distance between two nodes in a tree.</p></div><br><br><strong>Example Input</strong><br><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><br><pre> A = [-1, 0, 0, 0, 3]<br></pre><br><p></p></div><br><br><strong>Example Output</strong><br><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><br><pre> 3<br></pre><br><p></p></div><br><br><strong>Example Explanation</strong><br><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><br><pre> node 0 is the root and the whole tree looks like this: <br>          0<br>       /  |  \\<br>      1   2   3<br>               \\<br>                4<br><br> One of the longest path is 1 -&gt; 0 -&gt; 3 -&gt; 4 and its length is 3, thus the answer is 3.<br></pre><br><p></p></div><br><br><p></p><br><br>                          <blockquote style=\"position:relative;\"><br>                              <span style=\"font-weight: normal;margin: 12px;\"><br>                                  <b>NOTE: </b>You only need to implement the given function. Do not read input, instead use the arguments to the function. Do not print the output, instead return values as specified.<br>                                  Still have a doubt? Checkout <a href=\"/pages/sample_codes/\">Sample Codes</a> for more details.<br>                              </span><br>                            <span class=\"fa fa-remove\" id=\"prob-hint-remove\" style=\"position:absolute;top:0;right:0;margin:12px;color:grey;\"></span><br>                          </blockquote><br><br>                    </body></html>",
  "problem_id": 369,
  "problem_name": "Largest Distance between nodes of a Tree",
  "problem_link": "https://www.interviewbit.com/problems/largest-distance-between-nodes-of-a-tree/",
  "problem_score": 200,
  "time_to_solve": "69:50"
}