{
  "hasImages": false,
  "contentHTML": "<html><head></head><body><h4>Kth Row of Pascal&apos;s Triangle</h4><div><strong>Time: 28:32</strong><br><strong>Score: 225</strong></div><br><br>                      <p>Given an index k, return the kth row of the Pascal&#x2019;s triangle.</p><br><br><p>Pascal&#x2019;s triangle : To generate A[C] in row R, sum up A&#x2019;[C] and A&#x2019;[C-1] from previous row R - 1.</p><br><br><p><strong>Example:</strong></p><br><br><div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>Input : k = 3<br><br>Return : [1,3,3,1]<br></code></pre><br></div><br><br><blockquote><br>  <p><strong>NOTE</strong> : k is 0 based. k = 0, corresponds to the row [1].</p><br></blockquote><br><br><p><em>Note:Could you optimize your algorithm to use only O(k) extra space?</em></p><br><br>                          <blockquote style=\"position:relative;\"><br>                              <span style=\"font-weight: normal;margin: 12px;\"><br>                                  <b>NOTE: </b>You only need to implement the given function. Do not read input, instead use the arguments to the function. Do not print the output, instead return values as specified.<br>                                  Still have a doubt? Checkout <a href=\"/pages/sample_codes/\">Sample Codes</a> for more details.<br>                              </span><br>                            <span class=\"fa fa-remove\" id=\"prob-hint-remove\" style=\"position:absolute;top:0;right:0;margin:12px;color:grey;\"></span><br>                          </blockquote><br><br>                    </body></html>",
  "problem_id": 54,
  "problem_name": "Kth Row of Pascal's Triangle",
  "problem_link": "https://www.interviewbit.com/problems/kth-row-of-pascals-triangle/",
  "problem_score": 225,
  "time_to_solve": "28:32"
}