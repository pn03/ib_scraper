{
  "hasImages": false,
  "contentHTML": "<html><head></head><body><h4>REC_CMPL3</h4><div><strong>Time:4:39</strong><br><strong>Score:150</strong></div><br>                      <p>What is the worst case time complexity of the following code:</p><div class=\"language-cpp highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"kt\">int</span> <span class=\"n\">memo</span><span class=\"p\">[</span><span class=\"mi\">101</span><span class=\"p\">][</span><span class=\"mi\">101</span><span class=\"p\">];</span><span class=\"kt\">int</span> <span class=\"nf\">findMinPath</span><span class=\"p\">(</span><span class=\"n\">vector</span><span class=\"o\">&lt;</span><span class=\"n\">vector</span><span class=\"o\">&lt;</span><span class=\"kt\">int</span><span class=\"o\">&gt;</span> <span class=\"o\">&gt;&amp;</span> <span class=\"n\">V</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">c</span><span class=\"p\">)</span> <span class=\"p\">{</span>  <span class=\"kt\">int</span> <span class=\"n\">R</span> <span class=\"o\">=</span> <span class=\"n\">V</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">();</span>  <span class=\"kt\">int</span> <span class=\"n\">C</span> <span class=\"o\">=</span> <span class=\"n\">V</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"n\">size</span><span class=\"p\">();</span>  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">r</span> <span class=\"o\">&gt;=</span> <span class=\"n\">R</span> <span class=\"o\">||</span> <span class=\"n\">c</span> <span class=\"o\">&gt;=</span> <span class=\"n\">C</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"mi\">100000000</span><span class=\"p\">;</span> <span class=\"c1\">// Infinity</span>  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">r</span> <span class=\"o\">==</span> <span class=\"n\">R</span> <span class=\"o\">-</span> <span class=\"mi\">1</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">c</span> <span class=\"o\">==</span> <span class=\"n\">C</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">memo</span><span class=\"p\">[</span><span class=\"n\">r</span><span class=\"p\">][</span><span class=\"n\">c</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"n\">memo</span><span class=\"p\">[</span><span class=\"n\">r</span><span class=\"p\">][</span><span class=\"n\">c</span><span class=\"p\">];</span>  <span class=\"n\">memo</span><span class=\"p\">[</span><span class=\"n\">r</span><span class=\"p\">][</span><span class=\"n\">c</span><span class=\"p\">]</span> <span class=\"o\">=</span>  <span class=\"n\">V</span><span class=\"p\">[</span><span class=\"n\">r</span><span class=\"p\">][</span><span class=\"n\">c</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">min</span><span class=\"p\">(</span><span class=\"n\">findMinPath</span><span class=\"p\">(</span><span class=\"n\">V</span><span class=\"p\">,</span> <span class=\"n\">r</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"p\">),</span> <span class=\"n\">findMinPath</span><span class=\"p\">(</span><span class=\"n\">V</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">c</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">));</span>  <span class=\"k\">return</span> <span class=\"n\">memo</span><span class=\"p\">[</span><span class=\"n\">r</span><span class=\"p\">][</span><span class=\"n\">c</span><span class=\"p\">];</span><span class=\"p\">}</span><span class=\"n\">Callsite</span> <span class=\"o\">:</span> <span class=\"n\">memset</span><span class=\"p\">(</span><span class=\"n\">memo</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"k\">sizeof</span><span class=\"p\">(</span><span class=\"n\">memo</span><span class=\"p\">));</span><span class=\"n\">findMinPath</span><span class=\"p\">(</span><span class=\"n\">V</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">);</span></code></pre></div><p>Assume R = V.size() and C = V[0].size() and V has positive elements</p><blockquote>  <p><strong>NOTE</strong> : This question involves recursion which will be explained later in topic <em>Backtracking</em>. So, if you are not able to approach this question now, you can give it a try later.</p></blockquote>                    </body></html>",
  "problem_id": 287,
  "problem_name": "REC_CMPL3",
  "problem_link": "https://www.interviewbit.com/problems/reccmpl3/",
  "problem_score": 150,
  "time_to_solve": "4:39"
}