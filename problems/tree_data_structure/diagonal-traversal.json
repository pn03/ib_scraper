{
  "imgUrls": [
    "https://i.imgur.com/TssjQtS.jpeg",
    "https://i.imgur.com/bTL4IOH.jpeg"
  ],
  "hasImages": true,
  "contentHTML": "<html><head></head><body><h4>Diagonal Traversal</h4><div><strong>Time: 34:03</strong><br><strong>Score: 200</strong></div><br><br>                      <p><strong>Problem Description</strong><br></p><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Consider lines of slope -1 passing between nodes.</p><p></p><p></p><p></p><p></p><br><p>Given a Binary Tree <strong>A</strong> containing <strong>N</strong> nodes, return all diagonal elements in a binary tree belonging to same line.</p><br><p><strong>NOTE:</strong></p><br><ul><br><li>See Sample Explanation for better understanding.</li><br><li>Order does matter in the output.</li><br><li>To get the same order as in the output traverse the tree same as we do in pre-order traversal.</li><br></ul><br><p></p><br><p></p><br><p></p><br><p></p></div><br><br><strong>Problem Constraints</strong><br><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p> 0 &lt;= N &lt;= 10<sup>5</sup> </p></div><br><br><strong>Input Format</strong><br><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only Argument represents the root of binary tree <strong>A</strong>.</p></div><br><br><strong>Output Format</strong><br><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a 1D array denoting the diagonal traversal of the tree.</p></div><br><br><strong>Example Input</strong><br><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><br><pre>            1<br>          /   \\<br>         4      2<br>        / \\      \\<br>       8   5      3<br>          / \\    /<br>         9   7  6<br></pre><br><p>Input 2:</p><br><pre>             11<br>          /     \\<br>         20      12<br>        / \\       \\<br>       1   15      13<br>          /  \\     /<br>         2    17  16<br>          \\   /<br>          22 34<br></pre><br><p></p><br><p></p><br><p></p><br><p></p></div><br><br><strong>Example Output</strong><br><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><br><pre> [1, 2, 3, 4, 5, 7, 6, 8, 9]<br></pre><br><p>Output 2:</p><br><pre> [11, 12, 13, 20, 15, 17, 16, 1, 2, 22, 34]<br></pre><br><p></p><br><p></p><br><p></p><br><p></p></div><br><br><strong>Example Explanation</strong><br><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><p></p><br><pre> <img src=\"tree_data_structure_assets/Q_diagonal_traversal_1.jpeg\" height=\"30%\" width=\"40%\"><br> 1) Diagonal 1 contains [1, 2, 3]<br> 2) Diagonal 2 contains [4, 5, 7, 6]<br> 3) Diagonal 3 contains [8, 9]<p></p><br><br><p><strong>NOTE:</strong><br>The order in the output matters like for Example:<br>6 and 7 belong to same diagonal i.e diagonal 2 but as 7 comes before 6 in pre-order traversal so 7 will be added to answer array first.</p><br><br><p>So concantenate all the array as return it as a single one.<br> Final output: [1, 2, 3, 4, 5, 7, 6, 8, 9]<br></p></pre><br><p>Explanation 2:</p><br><pre> <img src=\"tree_data_structure_assets/Q_diagonal_traversal_2.jpeg\" height=\"30%\" width=\"40%\"><br> 1) Diagonal 1 contains [11, 12, 13]<br> 2) Diagonal 2 contains [20, 15, 17, 16]<br> 3) Diagonal 2 contains [1, 2, 22, 34]<p></p><br><br><p>So concantenate all the array as return it as a single one.<br> Final output: [11, 12, 13, 20, 15, 17, 16, 1, 2, 22, 34]</p><br><br><p></p></pre><br><p></p><br><p></p><br><p></p><br><p></p></div><br><br><p></p><br><br>                          <blockquote style=\"position:relative;\"><br>                              <span style=\"font-weight: normal;margin: 12px;\"><br>                                  <b>NOTE: </b>You only need to implement the given function. Do not read input, instead use the arguments to the function. Do not print the output, instead return values as specified.<br>                                  Still have a doubt? Checkout <a href=\"/pages/sample_codes/\">Sample Codes</a> for more details.<br>                              </span><br>                            <span class=\"fa fa-remove\" id=\"prob-hint-remove\" style=\"position:absolute;top:0;right:0;margin:12px;color:grey;\"></span><br>                          </blockquote><br><br>                    </body></html>",
  "imgNames": [
    "TssjQtS.jpeg",
    "Q_diagonal_traversal_1.jpeg",
    "bTL4IOH.jpeg",
    "Q_diagonal_traversal_2.jpeg"
  ],
  "problem_id": 11050,
  "problem_name": "Diagonal Traversal",
  "problem_link": "https://www.interviewbit.com/problems/diagonal-traversal/",
  "problem_score": 200,
  "time_to_solve": "34:03"
}