{
  "hasImages": false,
  "contentHTML": "<html><head></head><body><h4>Merge two Binary Tree</h4><div><strong>Time:17:03</strong><br><strong>Score:200</strong></div><br>                      <p><strong>Problem Description</strong><br></p><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given two Binary Trees <strong>A</strong> and <strong>B</strong>, you need to <strong>merge</strong> them in a single binary tree.</p><p></p><p>The merge rule is that if two nodes overlap, then sum of node values is the new value of the merged node.</p><p>Otherwise, the non-null node will be used as the node of new tree.</p><p></p></div><br><br><strong>Problem Constraints</strong><br><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= Number of Nodes in A , B &lt;= 10<sup>5</sup></p></div><br><br><strong>Input Format</strong><br><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First argument is an pointer to the root of binary tree <strong>A</strong>.</p><p></p><p>Second argument is an pointer to the root of binary tree <strong>B</strong>.</p><p></p></div><br><br><strong>Output Format</strong><br><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a pointer to the root of new binary tree.</p></div><br><br><strong>Example Input</strong><br><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><pre> A =   2<br>      / \\<br>     1   4<br>    /<br>   5<p></p><p>B =   3      / \\      6  1      \\   \\       2   7</p></pre><p>Input 2:</p><pre> A =   12<br>      / \\<br>     11  14            <p></p><p>B =   3      / \\      6  1</p></pre><p></p></div><br><br><strong>Example Output</strong><br><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><pre>     5    / \\   7   5  / \\   \\  5   2   7</pre><p>Output 2:</p><pre>   15  / \\ 17  15</pre><p></p></div><br><br><strong>Example Explanation</strong><br><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><pre> After merging both the trees you get:     5    / \\   7   5  / \\   \\  5   2   7</pre><p>Explanation 2:</p><pre> After merging both the trees we get:   15  / \\ 17  15</pre><p></p></div><br><br><p></p>                          <blockquote style=\"position:relative;\">                              <span style=\"font-weight: normal;margin: 12px;\">                                  <b>NOTE: </b>You only need to implement the given function. Do not read input, instead use the arguments to the function. Do not print the output, instead return values as specified.                                  Still have a doubt? Checkout <a href=\"/pages/sample_codes/\">Sample Codes</a> for more details.                              </span>                            <span class=\"fa fa-remove\" id=\"prob-hint-remove\" style=\"position:absolute;top:0;right:0;margin:12px;color:grey;\"></span>                          </blockquote>                    </body></html>",
  "problem_id": 11642,
  "problem_name": "Merge two Binary Tree",
  "problem_link": "https://www.interviewbit.com/problems/merge-two-binary-tree/",
  "problem_score": 200,
  "time_to_solve": "17:03"
}