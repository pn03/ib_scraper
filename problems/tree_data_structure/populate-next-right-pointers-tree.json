{
  "hasImages": false,
  "contentHTML": "<html><head></head><body><h4>Populate Next Right Pointers Tree</h4><div><strong>Time: 49:29</strong><br><strong>Score: 900</strong></div><br><br>                      <p>Given a binary tree</p><br><br><div class=\"language-cpp highlighter-rouge\"><pre class=\"highlight\"><code>    <span class=\"k\">struct</span> <span class=\"n\">TreeLinkNode</span> <span class=\"p\">{</span><br>      <span class=\"n\">TreeLinkNode</span> <span class=\"o\">*</span><span class=\"n\">left</span><span class=\"p\">;</span><br>      <span class=\"n\">TreeLinkNode</span> <span class=\"o\">*</span><span class=\"n\">right</span><span class=\"p\">;</span><br>      <span class=\"n\">TreeLinkNode</span> <span class=\"o\">*</span><span class=\"n\">next</span><span class=\"p\">;</span><br>    <span class=\"p\">}</span><br></code></pre><br></div><br><br><p>Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to <code class=\"highlighter-rouge\">NULL</code>.</p><br><br><p>Initially, all next pointers are set to <code class=\"highlighter-rouge\">NULL</code>.</p><br><br><blockquote><br>  <p><strong>Note:</strong></p><br><br>  <ul><br>    <li>You may only use constant extra space.</li><br>  </ul><br></blockquote><br><br><p><strong>Example :</strong></p><br><br><p>Given the following binary tree,</p><br><br><div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>         1<br>       /  \\<br>      2    3<br>     / \\  / \\<br>    4  5  6  7<br></code></pre><br></div><br><br><p>After calling your function, the tree should look like:</p><br><br><div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>         1 -&gt; NULL<br>       /  \\<br>      2 -&gt; 3 -&gt; NULL<br>     / \\  / \\<br>    4-&gt;5-&gt;6-&gt;7 -&gt; NULL<br></code></pre><br></div><br><br><blockquote><br>  <p><strong>Note 1:</strong>  that using recursion has memory overhead and does not qualify for constant space.<br><br><strong>Note 2:</strong> The tree need not be a perfect binary tree.</p><br></blockquote><br><br><br>                          <blockquote style=\"position:relative;\"><br>                              <span style=\"font-weight: normal;margin: 12px;\"><br>                                  <b>NOTE: </b>You only need to implement the given function. Do not read input, instead use the arguments to the function. Do not print the output, instead return values as specified.<br>                                  Still have a doubt? Checkout <a href=\"/pages/sample_codes/\">Sample Codes</a> for more details.<br>                              </span><br>                            <span class=\"fa fa-remove\" id=\"prob-hint-remove\" style=\"position:absolute;top:0;right:0;margin:12px;color:grey;\"></span><br>                          </blockquote><br><br>                    </body></html>",
  "problem_id": 230,
  "problem_name": "Populate Next Right Pointers Tree",
  "problem_link": "https://www.interviewbit.com/problems/populate-next-right-pointers-tree/",
  "problem_score": 900,
  "time_to_solve": "49:29"
}