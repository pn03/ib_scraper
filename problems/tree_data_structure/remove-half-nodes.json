{
  "contentHTML": "<html><head></head><body><h3>Remove Half Nodes</h3><div><strong>Time: 29:33</strong><br><strong>Score: 200</strong></div><br><br>                      <p><strong>Problem Description</strong><br></p><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a binary tree <strong>A</strong> with <strong>N</strong> nodes.</p><p></p><br><p>You have to remove all the half nodes and return the final binary tree.</p><br><p><strong>NOTE:</strong></p><br><ul><li>Half nodes are nodes which have only one child.</li><br><li>Leaves should not be touched as they have both children as NULL.</li><br></ul><br><p></p></div><br><br><strong>Problem Constraints</strong><br><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p> 1 &lt;= N &lt;= 10<sup>5</sup></p></div><br><br><strong>Input Format</strong><br><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an pointer to the root of binary tree <strong>A</strong>.</p></div><br><br><strong>Output Format</strong><br><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a pointer to the root of the new binary tree.</p></div><br><br><strong>Example Input</strong><br><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><br><pre>           1<br>         /   \\<br>        2     3<br>       / <br>      4<br><br></pre><br><p>Input 2:</p><br><pre>            1<br>          /   \\<br>         2     3<br>        / \\     \\<br>       4   5     6<br></pre><br><p></p></div><br><br><strong>Example Output</strong><br><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><p></p><p></p><p></p><br><pre>           1<br>         /    \\<br>        4      3<br></pre><br><p>Output 2:</p><br><pre>            1<br>          /   \\<br>         2     6<br>        / \\<br><br>       4   5<br><br></pre><br><p></p><br><p></p><br><p></p><br><p></p><br><p></p><br><p></p></div><br><br><strong>Example Explanation</strong><br><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><br><pre> The only half node present in the tree is 2 so we will remove this node.<br></pre><br><p>Explanation 2:</p><br><pre> The only half node present in the tree is 3 so we will remove this node.<br></pre><br><p></p></div><br><br><p></p><br><br>                          <blockquote style=\"position:relative;\"><br>                              <span style=\"font-weight: normal;margin: 12px;\"><br>                                  <b>NOTE: </b>You only need to implement the given function. Do not read input, instead use the arguments to the function. Do not print the output, instead return values as specified.<br>                                  Still have a doubt? Checkout <a href=\"/pages/sample_codes/\">Sample Codes</a> for more details.<br>                              </span><br>                            <span class=\"fa fa-remove\" id=\"prob-hint-remove\" style=\"position:absolute;top:0;right:0;margin:12px;color:grey;\"></span><br>                          </blockquote><br><br>                    </body></html>",
  "hasImages": false,
  "problem_id": 11636,
  "problem_link": "https://www.interviewbit.com/problems/remove-half-nodes/",
  "problem_name": "Remove Half Nodes",
  "problem_score": 200,
  "time_to_solve": "29:33"
}