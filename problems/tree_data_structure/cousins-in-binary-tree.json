{
  "hasImages": false,
  "contentHTML": "<html><head></head><body><h4>Cousins in Binary Tree</h4><div><strong>Time:44:09</strong><br><strong>Score:200</strong></div><br>                      <p><strong>Problem Description</strong><br></p><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a Binary Tree <strong>A</strong> consisting of <strong>N</strong> nodes.</p><p></p><p></p><p>You need to find all the cousins of node <strong>B</strong>.</p><p><strong>NOTE:</strong></p><ul><li>Siblings should not be considered as cousins.</li><li>Try to do it in single traversal.</li><li>You can assume that Node <strong>B</strong> is there in the tree <strong>A</strong>.</li><li>Order doesn&apos;t matter in the output.</li></ul><p></p><p></p></div><br><br><strong>Problem Constraints</strong><br><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p> 1 &lt;= N &lt;= 10<sup>5</sup> </p><p></p><p></p><p> 1 &lt;= B &lt;= N</p><p></p><p></p></div><br><br><strong>Input Format</strong><br><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First Argument represents the root of binary tree <strong>A</strong>.</p><p></p><p></p><p>Second Argument is an integer <strong>B</strong> denoting the node number.</p><p></p><p></p></div><br><br><strong>Output Format</strong><br><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer array denoting the cousins of node <strong>B</strong>.</p><p></p><p></p><p><strong>NOTE:</strong> Order doesn&apos;t matter.</p><p></p><p></p></div><br><br><strong>Example Input</strong><br><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><p></p><p></p><pre> A =<br>           1         /   \\        2     3       / \\   / \\      4   5 6   7 <p></p><p>B = 5</p></pre><p>Input 2:</p><pre> A =             1          /   \\         2     3        / \\ .   \\       4   5 .   6<p></p><p>B = 1<br></p></pre><p></p><p></p></div><br><br><strong>Example Output</strong><br><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><pre> [6, 7]</pre><p>Output 2:</p><pre> []</pre><p></p><p></p></div><br><br><strong>Example Explanation</strong><br><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><pre> Cousins of Node 5 are Node 6 and 7 so we will return [6, 7] Remember Node 4 is sibling of Node 5 and do not need to return this.</pre><p>Explanation 2:</p><pre> Since Node 1 is the root so it doesn&apos;t have any cousin so we will return an empty array.</pre><p></p><p></p></div><br><br><p></p>                          <blockquote style=\"position:relative;\">                              <span style=\"font-weight: normal;margin: 12px;\">                                  <b>NOTE: </b>You only need to implement the given function. Do not read input, instead use the arguments to the function. Do not print the output, instead return values as specified.                                  Still have a doubt? Checkout <a href=\"/pages/sample_codes/\">Sample Codes</a> for more details.                              </span>                            <span class=\"fa fa-remove\" id=\"prob-hint-remove\" style=\"position:absolute;top:0;right:0;margin:12px;color:grey;\"></span>                          </blockquote>                    </body></html>",
  "problem_id": 11054,
  "problem_name": "Cousins in Binary Tree",
  "problem_link": "https://www.interviewbit.com/problems/cousins-in-binary-tree/",
  "problem_score": 200,
  "time_to_solve": "44:09"
}