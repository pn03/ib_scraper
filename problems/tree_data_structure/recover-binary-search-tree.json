{
  "hasImages": false,
  "contentHTML": "<html><head></head><body><h4>Recover Binary Search Tree</h4><div><strong>Time:59:43</strong><br><strong>Score:750</strong></div><br>                      <p>Two elements of a binary search tree (BST) are swapped by mistake.<br>Tell us the 2 values swapping which the tree will be restored.</p><blockquote>  <p><strong>Note:</strong><br>A solution using O(n) space is pretty straight forward. Could you devise a constant space solution?</p></blockquote><p><strong>Example :</strong></p><div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>Input :          1        / \\       2   3Output :        [1, 2]Explanation : Swapping 1 and 2 will change the BST to be          2        / \\       1   3which is a valid BST          </code></pre></div>                          <blockquote style=\"position:relative;\">                              <span style=\"font-weight: normal;margin: 12px;\">                                  <b>NOTE: </b>You only need to implement the given function. Do not read input, instead use the arguments to the function. Do not print the output, instead return values as specified.                                  Still have a doubt? Checkout <a href=\"/pages/sample_codes/\">Sample Codes</a> for more details.                              </span>                            <span class=\"fa fa-remove\" id=\"prob-hint-remove\" style=\"position:absolute;top:0;right:0;margin:12px;color:grey;\"></span>                          </blockquote>                    </body></html>",
  "problem_id": 216,
  "problem_name": "Recover Binary Search Tree",
  "problem_link": "https://www.interviewbit.com/problems/recover-binary-search-tree/",
  "problem_score": 750,
  "time_to_solve": "59:43"
}