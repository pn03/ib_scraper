{
  "hasImages": false,
  "contentHTML": "<html><head></head><body><h4>Egg Drop Problem!</h4><div><strong>Time:45:09</strong><br><strong>Score:450</strong></div><br>                      <p><strong>Problem Description</strong><br></p><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>You are given <strong>A</strong> eggs, and you have access to a building with <strong>B</strong> floors from <strong>1</strong> to <strong>B</strong>.</p><p></p><p></p><p></p><p>Each egg is identical in function, and if an egg breaks, you cannot drop it again.</p><p>You know that there exists a floor <strong>C</strong> with <strong>0 &lt;= C &lt;= B </strong> such that any egg dropped at a floor higher than <strong>C</strong> will break, and any egg dropped at or below floor <strong>C</strong> will not break.</p><p>Each move, you may take an egg (if you have an unbroken one) and drop it from any floor <strong>X</strong> (with <strong>1 &lt;= X &lt;= B</strong>). </p><p>Your goal is to know with certainty what the value of <strong>C</strong> is.</p><p>What is the minimum number of moves that you need to know with certainty what <strong>C</strong> is, regardless of the initial value of <strong>C</strong></p><p></p><p></p><p></p></div><br><br><strong>Problem Constraints</strong><br><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><ul><li> 1 &lt;= A &lt;= 100</li><li> 1 &lt;= B &lt;= 10<sup>4</sup></li></ul></div><br><br><strong>Input Format</strong><br><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First Argument is an integer <strong>A</strong> denoting number of eggs.</p><p></p><p></p><p></p><p>Second Argument is an integer <strong>B</strong> denoting number of floors.</p><p></p><p></p><p></p></div><br><br><strong>Output Format</strong><br><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return an integer denoting the Minimum number of moves.</p></div><br><br><strong>Example Input</strong><br><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><p></p><p></p><pre> A = 1 B = 2</pre><p>Input 2:</p><pre> A = 2 B = 10</pre><p></p><p></p><p></p></div><br><br><strong>Example Output</strong><br><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><p></p><p></p><pre> 2</pre><p>Output 2:</p><pre> 4 </pre><p></p><p></p><p></p></div><br><br><strong>Example Explanation</strong><br><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><p></p><p></p><pre> Drop the egg from floor 1.  If it breaks, we know with certainty that F = 0. Otherwise, drop the egg from floor 2.  If it breaks, we know with certainty that F = 1. If it didn&apos;t break, then we know with certainty F = 2. Hence, we needed 2 moves in the worst case to know what F is with certainty.</pre><p></p><p></p><p></p></div><br><br><p></p>                          <blockquote style=\"position:relative;\">                              <span style=\"font-weight: normal;margin: 12px;\">                                  <b>NOTE: </b>You only need to implement the given function. Do not read input, instead use the arguments to the function. Do not print the output, instead return values as specified.                                  Still have a doubt? Checkout <a href=\"/pages/sample_codes/\">Sample Codes</a> for more details.                              </span>                            <span class=\"fa fa-remove\" id=\"prob-hint-remove\" style=\"position:absolute;top:0;right:0;margin:12px;color:grey;\"></span>                          </blockquote>                    </body></html>",
  "problem_id": 12261,
  "problem_name": "Egg Drop Problem!",
  "problem_link": "https://www.interviewbit.com/problems/egg-drop-problem/",
  "problem_score": 450,
  "time_to_solve": "45:09"
}