{
  "hasImages": false,
  "contentHTML": "<html><head></head><body><h4>Increasing Path in Matrix</h4><div><strong>Time: 33:04</strong><br><strong>Score: 200</strong></div><br><br>                      <p><strong>Problem Description</strong><br></p><div id=\"problem_description_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Given a 2D integer matrix <strong>A</strong> of size <code>N x M</code>.</p><p></p><br><p>From <strong>A[i][j]</strong> you can move to <strong>A[i+1][j]</strong>, if <strong>A[i+1][j]</strong> &gt; <strong>A[i][j]</strong>, or can move to <strong>A[i][j+1]</strong> if <strong>A[i][j+1]</strong> &gt; <strong>A[i][j]</strong>.</p><br><p>The task is to find and output the longest path length if we start from <strong>(0, 0)</strong>.</p><br><p><strong>NOTE:</strong></p><br><p></p><li>If there doesn&apos;t exist a path return <strong>-1</strong>.</li></div><br><br><strong>Problem Constraints</strong><br><div id=\"problem_constraints_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>1 &lt;= N, M &lt;= 10<sup>3</sup></p><br><p>1 &lt;= A[i][j] &lt;= 10<sup>8</sup></p><br><p></p></div><br><br><strong>Input Format</strong><br><div id=\"input_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>First and only argument is an 2D integer matrix <strong>A</strong> of size <code>N x M</code>.</p>   </div><br><br><strong>Output Format</strong><br><div id=\"output_format_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Return a single integer denoting the length of longest path in the matrix if no such path exists return <strong>-1</strong>.</p></div><br><br><strong>Example Input</strong><br><div id=\"example_input_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Input 1:</p><p></p><br><pre> A = [  [1, 2]<br>        [3, 4]<br>     ]<br></pre><br><p>Input 2:</p><br><pre> A = [  [1, 2, 3, 4]<br>        [2, 2, 3, 4]<br>        [3, 2, 3, 4]<br>        [4, 5, 6, 7]<br>     ]<br></pre><br><p></p></div><br><br><strong>Example Output</strong><br><div id=\"example_output_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Output 1:</p><p></p><br><pre> 3<br></pre><br><p>Output 2:</p><br><pre> 7<br></pre><br><p></p></div><br><br><strong>Example Explanation</strong><br><div id=\"example_explanation_markdown_content_value\" style=\"background-color: #f9f9f9; padding: 5px 10px; \"><p>Explanation 1:</p><p></p><br><pre> Longest path is either 1 2 4 or 1 3 4.<br></pre><br><p>Explanation 2:</p><br><pre> Longest path is 1 2 3 4 5 6 7.<br></pre><br><p></p></div><br><br><p></p><br><br>                          <blockquote style=\"position:relative;\"><br>                              <span style=\"font-weight: normal;margin: 12px;\"><br>                                  <b>NOTE: </b>You only need to implement the given function. Do not read input, instead use the arguments to the function. Do not print the output, instead return values as specified.<br>                                  Still have a doubt? Checkout <a href=\"/pages/sample_codes/\">Sample Codes</a> for more details.<br>                              </span><br>                            <span class=\"fa fa-remove\" id=\"prob-hint-remove\" style=\"position:absolute;top:0;right:0;margin:12px;color:grey;\"></span><br>                          </blockquote><br><br>                    </body></html>",
  "problem_id": 12161,
  "problem_name": "Increasing Path in Matrix",
  "problem_link": "https://www.interviewbit.com/problems/increasing-path-in-matrix/",
  "problem_score": 200,
  "time_to_solve": "33:04"
}